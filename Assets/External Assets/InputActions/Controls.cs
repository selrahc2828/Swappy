//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.1
//     from Assets/External Assets/InputActions/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""e392c65e-f392-42af-81ad-9456cbef46a3"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""10fd2399-ef57-47bf-bd45-ac7d14be60fd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""ca0db29c-63db-481a-8f95-1accb7c58b3a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ActionSlot1"",
                    ""type"": ""Button"",
                    ""id"": ""7ceda912-4f0e-4edc-9248-aff9cafbecd8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionSlot2"",
                    ""type"": ""Button"",
                    ""id"": ""cf4fcf45-fe26-41e7-9bf0-7c875fc842e9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StopTime"",
                    ""type"": ""Button"",
                    ""id"": ""e7830582-6053-4936-819b-14b884a0ac44"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ApplicationDeComportementSurPlayer"",
                    ""type"": ""Button"",
                    ""id"": ""f91e9be7-4f72-478a-b71d-a61dfa28455e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ViderComportementSurPlayer"",
                    ""type"": ""Button"",
                    ""id"": ""e417ad69-67cb-479e-b115-5aea522daf60"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReloadScene"",
                    ""type"": ""Button"",
                    ""id"": ""c3c1b66b-7535-4f06-926d-8d5db4ddc621"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""ab72754d-9bed-480a-8a6b-6b87694672c6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchCam"",
                    ""type"": ""Button"",
                    ""id"": ""aaaafa7e-e1b9-4ef9-92f4-4a8ec6fc9813"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GrabAction"",
                    ""type"": ""Button"",
                    ""id"": ""0e892a30-63d7-4195-9d3e-1c494ec8887b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StartCrouch"",
                    ""type"": ""Button"",
                    ""id"": ""776e59f9-10bf-47db-bcb4-368a83d5eea2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StopCrouch"",
                    ""type"": ""Button"",
                    ""id"": ""5ecf4f5a-6c14-4438-9374-84c6a4ecfba4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StartSprint"",
                    ""type"": ""Button"",
                    ""id"": ""9ef9b5a5-f4c2-43e5-81c5-90f09cde607f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StopSprint"",
                    ""type"": ""Button"",
                    ""id"": ""00f81513-3bf3-4008-a7b7-1224705f5338"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ViderSlots"",
                    ""type"": ""Button"",
                    ""id"": ""a8b2de4b-31d7-472c-9782-d679ab464161"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchSlotsValue"",
                    ""type"": ""Button"",
                    ""id"": ""0482c4b8-7211-4275-bc1e-2bf35fa7df3d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""0ea54ff0-aa39-4e1c-acbe-6eef7ed46546"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DropAction"",
                    ""type"": ""Button"",
                    ""id"": ""bc69142a-e89f-40f2-bbd4-8d111b8a8783"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LaunchAction"",
                    ""type"": ""Button"",
                    ""id"": ""351ed7f3-a99b-42a6-ba8b-bd29fd580159"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SIMAction"",
                    ""type"": ""Button"",
                    ""id"": ""9bf668b9-14eb-4173-a526-ad2d9d95b95e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""8d142b99-101e-4c00-a7a0-61442b2d4016"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""773519db-fce0-4e01-90ae-0b5d1451a27f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""ActionSlot1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52d2ddea-8b7b-4160-a1e2-f3812faa0c94"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""StopTime"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75abed16-4def-4e4f-86da-4a0a839207ae"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""ActionSlot2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0ef4cbe-e602-4043-bb41-08c6508aa451"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReloadScene"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d16957df-764d-4ff0-9bb3-b417c4f3ef70"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""43caf8d6-dd18-4ff9-9e07-1ba471f657dc"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0903fe4c-e85d-4da9-88c3-7198d9ed5417"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f6a3a7fe-ec02-4058-b952-9865ca36144f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""da1f6316-107c-4497-b957-2476b6510dd7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ddd10395-3166-44ec-9551-39075ad833d5"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""554af14f-c7ee-447a-a265-89f70064c2f0"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b054430-d555-40d3-8417-acf8dd7c8168"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e0a6e16-3d94-4f91-8fef-a44384c4d540"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""SwitchCam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e61932b0-c82c-4a7b-ad8a-9c227be0d7fa"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ApplicationDeComportementSurPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f69c9b20-1ae0-471b-8954-cec46fe387d0"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ViderComportementSurPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba10ab78-a2a4-4502-866d-0be0cc7f3ef5"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrabAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""371f9094-5953-45f3-9c0f-bf79692f468e"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartCrouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""199a3bab-35f9-4a9c-b0ee-8a61321bf251"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopCrouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9eb5d3ca-e842-48fe-a005-38870ca4bfef"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartSprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ec8e422-9201-4d74-99a0-42917a7bdc40"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopSprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c060c771-3726-430d-8f3f-a517c8561f89"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ViderSlots"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c4890e7-d283-40b2-bf1f-1cf96cb2a121"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchSlotsValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96883a78-2dec-4338-9004-268aebc342b8"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76e47fbd-fbf9-42ea-8f1a-dd86b0ddb213"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9678dd7e-c271-47ba-be70-f3cde446a35d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""DropAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e031564-4381-4ffa-9b3d-ff212831e525"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""LaunchAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9611afef-db5c-4976-b666-b3517a6e993f"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""SIMAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57c10635-4385-424e-8f85-1a943bfb55de"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SIMAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed965136-1d39-4427-a409-9823cde2f2b9"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Pause"",
            ""id"": ""18b50049-7645-4e1c-b839-f727be0c9b25"",
            ""actions"": [
                {
                    ""name"": ""Resume"",
                    ""type"": ""Button"",
                    ""id"": ""7bf8c065-bbe5-4f47-9bde-000758012d4c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a01e391a-ffce-4fe0-9971-47e39d541022"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Resume"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""965fdac0-20a2-4973-9b6b-9fb4bf4e62b5"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Resume"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": []
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": []
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_ActionSlot1 = m_Player.FindAction("ActionSlot1", throwIfNotFound: true);
        m_Player_ActionSlot2 = m_Player.FindAction("ActionSlot2", throwIfNotFound: true);
        m_Player_StopTime = m_Player.FindAction("StopTime", throwIfNotFound: true);
        m_Player_ApplicationDeComportementSurPlayer = m_Player.FindAction("ApplicationDeComportementSurPlayer", throwIfNotFound: true);
        m_Player_ViderComportementSurPlayer = m_Player.FindAction("ViderComportementSurPlayer", throwIfNotFound: true);
        m_Player_ReloadScene = m_Player.FindAction("ReloadScene", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_SwitchCam = m_Player.FindAction("SwitchCam", throwIfNotFound: true);
        m_Player_GrabAction = m_Player.FindAction("GrabAction", throwIfNotFound: true);
        m_Player_StartCrouch = m_Player.FindAction("StartCrouch", throwIfNotFound: true);
        m_Player_StopCrouch = m_Player.FindAction("StopCrouch", throwIfNotFound: true);
        m_Player_StartSprint = m_Player.FindAction("StartSprint", throwIfNotFound: true);
        m_Player_StopSprint = m_Player.FindAction("StopSprint", throwIfNotFound: true);
        m_Player_ViderSlots = m_Player.FindAction("ViderSlots", throwIfNotFound: true);
        m_Player_SwitchSlotsValue = m_Player.FindAction("SwitchSlotsValue", throwIfNotFound: true);
        m_Player_PauseMenu = m_Player.FindAction("PauseMenu", throwIfNotFound: true);
        m_Player_DropAction = m_Player.FindAction("DropAction", throwIfNotFound: true);
        m_Player_LaunchAction = m_Player.FindAction("LaunchAction", throwIfNotFound: true);
        m_Player_SIMAction = m_Player.FindAction("SIMAction", throwIfNotFound: true);
        m_Player_Interaction = m_Player.FindAction("Interaction", throwIfNotFound: true);
        // Pause
        m_Pause = asset.FindActionMap("Pause", throwIfNotFound: true);
        m_Pause_Resume = m_Pause.FindAction("Resume", throwIfNotFound: true);
    }

    ~@Controls()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, Controls.Player.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Pause.enabled, "This will cause a leak and performance issues, Controls.Pause.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_ActionSlot1;
    private readonly InputAction m_Player_ActionSlot2;
    private readonly InputAction m_Player_StopTime;
    private readonly InputAction m_Player_ApplicationDeComportementSurPlayer;
    private readonly InputAction m_Player_ViderComportementSurPlayer;
    private readonly InputAction m_Player_ReloadScene;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_SwitchCam;
    private readonly InputAction m_Player_GrabAction;
    private readonly InputAction m_Player_StartCrouch;
    private readonly InputAction m_Player_StopCrouch;
    private readonly InputAction m_Player_StartSprint;
    private readonly InputAction m_Player_StopSprint;
    private readonly InputAction m_Player_ViderSlots;
    private readonly InputAction m_Player_SwitchSlotsValue;
    private readonly InputAction m_Player_PauseMenu;
    private readonly InputAction m_Player_DropAction;
    private readonly InputAction m_Player_LaunchAction;
    private readonly InputAction m_Player_SIMAction;
    private readonly InputAction m_Player_Interaction;
    public struct PlayerActions
    {
        private @Controls m_Wrapper;
        public PlayerActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @ActionSlot1 => m_Wrapper.m_Player_ActionSlot1;
        public InputAction @ActionSlot2 => m_Wrapper.m_Player_ActionSlot2;
        public InputAction @StopTime => m_Wrapper.m_Player_StopTime;
        public InputAction @ApplicationDeComportementSurPlayer => m_Wrapper.m_Player_ApplicationDeComportementSurPlayer;
        public InputAction @ViderComportementSurPlayer => m_Wrapper.m_Player_ViderComportementSurPlayer;
        public InputAction @ReloadScene => m_Wrapper.m_Player_ReloadScene;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @SwitchCam => m_Wrapper.m_Player_SwitchCam;
        public InputAction @GrabAction => m_Wrapper.m_Player_GrabAction;
        public InputAction @StartCrouch => m_Wrapper.m_Player_StartCrouch;
        public InputAction @StopCrouch => m_Wrapper.m_Player_StopCrouch;
        public InputAction @StartSprint => m_Wrapper.m_Player_StartSprint;
        public InputAction @StopSprint => m_Wrapper.m_Player_StopSprint;
        public InputAction @ViderSlots => m_Wrapper.m_Player_ViderSlots;
        public InputAction @SwitchSlotsValue => m_Wrapper.m_Player_SwitchSlotsValue;
        public InputAction @PauseMenu => m_Wrapper.m_Player_PauseMenu;
        public InputAction @DropAction => m_Wrapper.m_Player_DropAction;
        public InputAction @LaunchAction => m_Wrapper.m_Player_LaunchAction;
        public InputAction @SIMAction => m_Wrapper.m_Player_SIMAction;
        public InputAction @Interaction => m_Wrapper.m_Player_Interaction;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @ActionSlot1.started += instance.OnActionSlot1;
            @ActionSlot1.performed += instance.OnActionSlot1;
            @ActionSlot1.canceled += instance.OnActionSlot1;
            @ActionSlot2.started += instance.OnActionSlot2;
            @ActionSlot2.performed += instance.OnActionSlot2;
            @ActionSlot2.canceled += instance.OnActionSlot2;
            @StopTime.started += instance.OnStopTime;
            @StopTime.performed += instance.OnStopTime;
            @StopTime.canceled += instance.OnStopTime;
            @ApplicationDeComportementSurPlayer.started += instance.OnApplicationDeComportementSurPlayer;
            @ApplicationDeComportementSurPlayer.performed += instance.OnApplicationDeComportementSurPlayer;
            @ApplicationDeComportementSurPlayer.canceled += instance.OnApplicationDeComportementSurPlayer;
            @ViderComportementSurPlayer.started += instance.OnViderComportementSurPlayer;
            @ViderComportementSurPlayer.performed += instance.OnViderComportementSurPlayer;
            @ViderComportementSurPlayer.canceled += instance.OnViderComportementSurPlayer;
            @ReloadScene.started += instance.OnReloadScene;
            @ReloadScene.performed += instance.OnReloadScene;
            @ReloadScene.canceled += instance.OnReloadScene;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @SwitchCam.started += instance.OnSwitchCam;
            @SwitchCam.performed += instance.OnSwitchCam;
            @SwitchCam.canceled += instance.OnSwitchCam;
            @GrabAction.started += instance.OnGrabAction;
            @GrabAction.performed += instance.OnGrabAction;
            @GrabAction.canceled += instance.OnGrabAction;
            @StartCrouch.started += instance.OnStartCrouch;
            @StartCrouch.performed += instance.OnStartCrouch;
            @StartCrouch.canceled += instance.OnStartCrouch;
            @StopCrouch.started += instance.OnStopCrouch;
            @StopCrouch.performed += instance.OnStopCrouch;
            @StopCrouch.canceled += instance.OnStopCrouch;
            @StartSprint.started += instance.OnStartSprint;
            @StartSprint.performed += instance.OnStartSprint;
            @StartSprint.canceled += instance.OnStartSprint;
            @StopSprint.started += instance.OnStopSprint;
            @StopSprint.performed += instance.OnStopSprint;
            @StopSprint.canceled += instance.OnStopSprint;
            @ViderSlots.started += instance.OnViderSlots;
            @ViderSlots.performed += instance.OnViderSlots;
            @ViderSlots.canceled += instance.OnViderSlots;
            @SwitchSlotsValue.started += instance.OnSwitchSlotsValue;
            @SwitchSlotsValue.performed += instance.OnSwitchSlotsValue;
            @SwitchSlotsValue.canceled += instance.OnSwitchSlotsValue;
            @PauseMenu.started += instance.OnPauseMenu;
            @PauseMenu.performed += instance.OnPauseMenu;
            @PauseMenu.canceled += instance.OnPauseMenu;
            @DropAction.started += instance.OnDropAction;
            @DropAction.performed += instance.OnDropAction;
            @DropAction.canceled += instance.OnDropAction;
            @LaunchAction.started += instance.OnLaunchAction;
            @LaunchAction.performed += instance.OnLaunchAction;
            @LaunchAction.canceled += instance.OnLaunchAction;
            @SIMAction.started += instance.OnSIMAction;
            @SIMAction.performed += instance.OnSIMAction;
            @SIMAction.canceled += instance.OnSIMAction;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @ActionSlot1.started -= instance.OnActionSlot1;
            @ActionSlot1.performed -= instance.OnActionSlot1;
            @ActionSlot1.canceled -= instance.OnActionSlot1;
            @ActionSlot2.started -= instance.OnActionSlot2;
            @ActionSlot2.performed -= instance.OnActionSlot2;
            @ActionSlot2.canceled -= instance.OnActionSlot2;
            @StopTime.started -= instance.OnStopTime;
            @StopTime.performed -= instance.OnStopTime;
            @StopTime.canceled -= instance.OnStopTime;
            @ApplicationDeComportementSurPlayer.started -= instance.OnApplicationDeComportementSurPlayer;
            @ApplicationDeComportementSurPlayer.performed -= instance.OnApplicationDeComportementSurPlayer;
            @ApplicationDeComportementSurPlayer.canceled -= instance.OnApplicationDeComportementSurPlayer;
            @ViderComportementSurPlayer.started -= instance.OnViderComportementSurPlayer;
            @ViderComportementSurPlayer.performed -= instance.OnViderComportementSurPlayer;
            @ViderComportementSurPlayer.canceled -= instance.OnViderComportementSurPlayer;
            @ReloadScene.started -= instance.OnReloadScene;
            @ReloadScene.performed -= instance.OnReloadScene;
            @ReloadScene.canceled -= instance.OnReloadScene;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @SwitchCam.started -= instance.OnSwitchCam;
            @SwitchCam.performed -= instance.OnSwitchCam;
            @SwitchCam.canceled -= instance.OnSwitchCam;
            @GrabAction.started -= instance.OnGrabAction;
            @GrabAction.performed -= instance.OnGrabAction;
            @GrabAction.canceled -= instance.OnGrabAction;
            @StartCrouch.started -= instance.OnStartCrouch;
            @StartCrouch.performed -= instance.OnStartCrouch;
            @StartCrouch.canceled -= instance.OnStartCrouch;
            @StopCrouch.started -= instance.OnStopCrouch;
            @StopCrouch.performed -= instance.OnStopCrouch;
            @StopCrouch.canceled -= instance.OnStopCrouch;
            @StartSprint.started -= instance.OnStartSprint;
            @StartSprint.performed -= instance.OnStartSprint;
            @StartSprint.canceled -= instance.OnStartSprint;
            @StopSprint.started -= instance.OnStopSprint;
            @StopSprint.performed -= instance.OnStopSprint;
            @StopSprint.canceled -= instance.OnStopSprint;
            @ViderSlots.started -= instance.OnViderSlots;
            @ViderSlots.performed -= instance.OnViderSlots;
            @ViderSlots.canceled -= instance.OnViderSlots;
            @SwitchSlotsValue.started -= instance.OnSwitchSlotsValue;
            @SwitchSlotsValue.performed -= instance.OnSwitchSlotsValue;
            @SwitchSlotsValue.canceled -= instance.OnSwitchSlotsValue;
            @PauseMenu.started -= instance.OnPauseMenu;
            @PauseMenu.performed -= instance.OnPauseMenu;
            @PauseMenu.canceled -= instance.OnPauseMenu;
            @DropAction.started -= instance.OnDropAction;
            @DropAction.performed -= instance.OnDropAction;
            @DropAction.canceled -= instance.OnDropAction;
            @LaunchAction.started -= instance.OnLaunchAction;
            @LaunchAction.performed -= instance.OnLaunchAction;
            @LaunchAction.canceled -= instance.OnLaunchAction;
            @SIMAction.started -= instance.OnSIMAction;
            @SIMAction.performed -= instance.OnSIMAction;
            @SIMAction.canceled -= instance.OnSIMAction;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Pause
    private readonly InputActionMap m_Pause;
    private List<IPauseActions> m_PauseActionsCallbackInterfaces = new List<IPauseActions>();
    private readonly InputAction m_Pause_Resume;
    public struct PauseActions
    {
        private @Controls m_Wrapper;
        public PauseActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Resume => m_Wrapper.m_Pause_Resume;
        public InputActionMap Get() { return m_Wrapper.m_Pause; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PauseActions set) { return set.Get(); }
        public void AddCallbacks(IPauseActions instance)
        {
            if (instance == null || m_Wrapper.m_PauseActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PauseActionsCallbackInterfaces.Add(instance);
            @Resume.started += instance.OnResume;
            @Resume.performed += instance.OnResume;
            @Resume.canceled += instance.OnResume;
        }

        private void UnregisterCallbacks(IPauseActions instance)
        {
            @Resume.started -= instance.OnResume;
            @Resume.performed -= instance.OnResume;
            @Resume.canceled -= instance.OnResume;
        }

        public void RemoveCallbacks(IPauseActions instance)
        {
            if (m_Wrapper.m_PauseActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPauseActions instance)
        {
            foreach (var item in m_Wrapper.m_PauseActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PauseActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PauseActions @Pause => new PauseActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnActionSlot1(InputAction.CallbackContext context);
        void OnActionSlot2(InputAction.CallbackContext context);
        void OnStopTime(InputAction.CallbackContext context);
        void OnApplicationDeComportementSurPlayer(InputAction.CallbackContext context);
        void OnViderComportementSurPlayer(InputAction.CallbackContext context);
        void OnReloadScene(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSwitchCam(InputAction.CallbackContext context);
        void OnGrabAction(InputAction.CallbackContext context);
        void OnStartCrouch(InputAction.CallbackContext context);
        void OnStopCrouch(InputAction.CallbackContext context);
        void OnStartSprint(InputAction.CallbackContext context);
        void OnStopSprint(InputAction.CallbackContext context);
        void OnViderSlots(InputAction.CallbackContext context);
        void OnSwitchSlotsValue(InputAction.CallbackContext context);
        void OnPauseMenu(InputAction.CallbackContext context);
        void OnDropAction(InputAction.CallbackContext context);
        void OnLaunchAction(InputAction.CallbackContext context);
        void OnSIMAction(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
    }
    public interface IPauseActions
    {
        void OnResume(InputAction.CallbackContext context);
    }
}
